@page "/"
@rendermode InteractiveServer

@using Microsoft.EntityFrameworkCore
@using StationProject.Data
@using StationProject.Data.Models
@using StationProject.Services

@inject AppNavigationManager _navigation
@inject ApplicationDbContext _db;

<PageTitle>Home</PageTitle>

<div class="f-column" style="width: 100%">
    <div class="secondary-block row space-between">
        <span style="width: 500px; color: #052c3d; font-size: 32px;">
            <b>StationProject</b> - Легендарная компания<br/>
            <br/>
            Мы работаем 100 лет и поставляем ручки и карандаши в 100000 офисов по всему миру
        </span>

        <div class="f-column rot-7" style="width: 674px">
            <span style="font-size: 48px; font-weight: bold; color: #052c3d;">
                Мы продаем ручки!<br/>
                Eще мы продаем карандаши<br/>
                <br/>
            </span>
            <button @onclick="() => _navigation.NavigateToProducts()" class="primary" style="width: 257px; align-self: end;">Хочу ручку</button>
        </div>
    </div>

    @if (Categories is { Count: > 0 })
    {
        <div class="fw-column gap-20" style="padding: 60px 40px;">
            <span style="font-size: 36px; font-weight: bold">Категории</span>

            <div class="fw-row gap-20 space-between" style="flex: 1">
                @foreach (var category in Categories)
                {
                    <div class="f-column gap-10 category-item" style="align-items: center" @onclick="() => _navigation.NavigateToProducts(category.Id)">
                        <div class="circle-mask">
                            <img src="@category.FirstImageOrPlaceholderUrl()" alt="catgory"/>
                        </div>
                        <span style="align-self: center; font-size: 24px; font-weight: bold;">@category.Name</span>
                    </div>
                }
            </div>

            <span style="font-size: 24px; color: #8FA5AE; align-self: flex-end;" @onclick="() => _navigation.NavigateToProducts()">Посмотреть больше ></span>
        </div>
    }
</div>

@code {
    public ICollection<Category>? Categories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Categories = Enumerable.Repeat(await _db.Category.FirstAsync(), 5).ToList();
        
        // var now = DateTime.Today;
        // var nowMonthStats = await _db.UserActivityMonthStats.FirstOrDefaultAsync(x => x.CreatedAt.Value.Month == now.Month && x.CreatedAt.Value.Year == now.Year);
        // if (nowMonthStats is not null)
        // {
        //     nowMonthStats.TotalSiteViews++;
        //     _db.UserActivityMonthStats.Update(nowMonthStats);
        // }
        // else
        // {
        //     _db.UserActivityMonthStats.Add(new UserActivityMonthStat
        //     {
        //         TotalSiteViews = 1,
        //     });
        // }
        //
        // await _db.SaveChangesAsync();
    }

}