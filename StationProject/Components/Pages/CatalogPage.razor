@page "/Products/{CategoryId?}"
@rendermode InteractiveServer

@using StationProject.Domain
@using StationProject.Services

@inject AppNavigationManager _navigation
@inject ILogger<CatalogPage> Logger

<div class="f-column">
    <div class="fw-row gap-20" style="padding: 20px 60px">

        <div class="f-column gap-1">
            <span class="name-focusing-outlined">поиск</span>
            <input class="focusing-outlined" style="max-width: 500px;" type="text" placeholder="Введите текст для поиска..."
                   @bind="QueryText" @bind:after="@SetProducts" @bind:event="oninput"/>
        </div>

        <div class="f-column gap-1">
            <span class="name-focusing-outlined">сортировать</span>
            <select style="flex: 1; background-color: transparent;" class="focusing-outlined" @bind="OrderBy" @bind:after="@SetProducts">
                <option value="@ProductOrder.Default">-</option>
                <option value="@ProductOrder.Name">По имени</option>
                <option value="@ProductOrder.Price">По цене</option>
            </select>
        </div>
    </div>

    @if (ProductList.Count != 0)
    {
        <div class="fw-row gap-20" style="padding: 20px 60px">
            @foreach (var product in ProductList)
            {
                <div class="f-column" style="flex: 1 1 300px; min-width: 230px; width: 290px;">
                    <img src="@product.FirstImageOrPlaceholderUrl()" style="width: 100%; height: auto;">

                    <div class="f-column">
                        <div class="f-column" style="padding: 10px" @onclick="() => _navigation.NavigateToFullInfo(product.Id)">
                            <span style="font-size: 24px; height: 50px; color: #000000">@product.Name</span>
                            <div class="f-row" style="align-items: center">
                                <span style="flex: 1; font-size: 20px; text-align: start; color: #8FA5AE">@product.VendorName</span>

                                <div style="height: 13px; width: 1px; background-color: #8FA5AE;"></div>

                                <span style="flex: 1; font-size: 28px; font-weight: bold; text-align: end;">@product.Price</span>
                            </div>
                        </div>

                        <div class="f-row gap-10">
                            @if (product.IsAddedToCart)
                            {
                                <button class="outlined" style="flex: 1; background-color: #039855; border-color: #00a85d; color: white" @onclick="() => _navigation.NavigateToCart()">Добавлено!</button>
                            }
                            else
                            {
                                <button class="outlined" style="flex: 1;" @onclick="async () => await AddOrIncrementToCart(product)">В корзину</button>
                            }
                            <button class="primary" style="flex: 1;" @onclick="() => _navigation.NavigateToFastItemOrder(product.Id)">Купить</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <span>Ничего не выставлено на продажу!</span>
    }
</div>

@code {

    [Parameter]
    public string? CategoryId { get; set; }

    public string QueryText = "";
    public ProductOrder OrderBy = ProductOrder.Default;

    public async Task AddOrIncrementToCart(ProductShortInfo product)
    {
        await Task.Run(async () =>
        {
            if (!product.IsAddedToCart)
            {
                product.IsAddedToCart = true;
                await AddOrIncrementKorzinaItem(product.Id);
            }
        });
    }

}